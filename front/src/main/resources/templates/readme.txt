1. Положить папку templates в src/main/resources Spring Boot проекта
2. Описание шаблонов:
	а) signup.html - страница регистрации (доступна всем)
	б) main.html - главная стрица (входная точка приложения, доступна только залогиненым пользователям)
3. В шаблонах присутствует только html-верстка (JavaScript используется только для автообновления курсов валют)
4. Скриншоты с работающими шаблонами приложены для примера, как должно выглядеть
5. В приложении используются следующие эндпоинты/страницы приложения:
	а) GET "/" - редирект на "/main"
	б) GET "/main" - главная страница
		Возвращает:
            		шаблон "main.html"
            		используется модель для заполнения шаблона:
            			"login" - строка с логином пользователя
            			"name" - строка с фамилией и именем пользователя
            			"birthdate" - LocalDate с датой рождения пользователя
            			"accounts" - список всех зарегистрированных пользователей:
            				"currency" - enum валюта:
            					"title" - название валюты
            					"name()" - код валюты
            				"value" - сумма на счету пользователя в этой валюте
            				"exists" - true, если у пользователя есть счет в этой валюте, false, если нет
            			"currency" - список всех доступных валют:
            				"title" - название валюты
            				"name()" - код валюты
            			"users" - список всех пользователей:
            				"login" - логин пользователя
            				"name" - фамилия и имя пользователя
            			"passwordErrors" - список ошибок при смене пароля (null, если не выполнялась смена пароля)
            			"userAccountsErrors" - список ошибок при редактировании настроек аккаунта (null, если не выполнялось редактирование)
            			"cashErrors" - список ошибок при внесении/снятии денег (null, если не выполнялось внесение/снятие)
            			"transferErrors" - список ошибок при переводе между своими счетами (null, если не выполнялся перевод)
            			"transferOtherErrors" - список ошибок при переводе на счет другого пользователя (null, если не выполнялся перевод)
        в) POST "/user/{login}/editPassword" - эндпоинт смены пароля (записывает список ошибок, если есть, в passwordErrors)
        	Параметры:
        		login - логин пользователя
        		password - новый пароль
        		confirm_password - новый пароль второй раз
        	Возвращает:
        		редирект на "/main"
        г) POST "/user/{login}/editUserAccounts" - эндпоинт редактирования аккаунта (записывает список ошибок, если есть, в userAccountsErrors)
        	Параметры:
        		login - логин пользователя
        		name - фамилия и имя пользователя
        		birthdate - дата рождения пользователя (LocalDate)
        		account - список строк с валютами пользователя, для которых у него есть счета
        	Возвращает:
        		редирект на "/main"
       	д) POST "/user/{login}/сash" - эндпоинт внесения/снятия денег (записывает список ошибок, если есть, в cashErrors)
        	Параметры:
        		login - логин пользователя
        		currency - строка с валютой
        		value - сумма внесения/снятия
        		action - действие (enum PUT иди GET)
        	Возвращает:
        		редирект на "/main"
       	е) POST "/user/{login}/transfer" - эндпоинт перевода денег между своими счетами и перевода денег на счет другого пользователя (один эндпоинт для того и другого, записывает список ошибок, если есть, в transferErrors или в transferOtherErrors)
        	Параметры:
        		login - логин пользователя
        		from_currency - строка с валютой счета, с которого переводятся деньги
        		to_currency - строка с валютой счета, на который переводятся деньги
        		value - сумма внесения/снятия
        		to_login - логин пользователя, которому переводятся деньги
        	Возвращает:
        		редирект на "/main"
        ж) GET "/signup" - страница регистрации нового пользователя
		Возвращает:
            		шаблон "signup.html"
       	з) POST "/signup" - эндпоинт регистрации нового пользователя
       		Параметры:
       			login - логин пользователя
       			password - пароль пользователя
       			confirm_password - пароль пользователя второй раз
       			name - фамилия и имя пользователя
       			birthdate - дата рождения пользователя (LocalDate)
       			@RequestParam("login") String login,
		Возвращает:
            		редирект на "/main"
            	В случае ошибок возвращает:
            		шаблон "signup.html"
            		используется модель для заполнения шаблона:
            			"login" - строка с логином пользователя
            			"name" - строка с фамилией и именем пользователя
            			"birthdate" - LocalDate с датой рождения пользователя
            			"accounts" - список всех зарегистрированных пользователей
            			"errors" - список ошибок при регистрации
        и) GET "/api/rates" - эндпоинт получения курсов валют
		Возвращает JSON со списком курсов валют:
            		title - название валюты
            		name - код валюты
            		value - курс валюты по отношению к рублю (для рубля 1)

