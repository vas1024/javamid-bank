package javamid.exgen.controller;

import javamid.exgen.model.ExchangeRateDto;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.*;
import org.springframework.security.oauth2.client.OAuth2AuthorizeRequest;
import org.springframework.security.oauth2.client.OAuth2AuthorizedClient;
import org.springframework.security.oauth2.client.OAuth2AuthorizedClientManager;
import org.springframework.stereotype.Controller;
import org.springframework.web.client.RestTemplate;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

@Controller
public class ExgenController {

  private final RestTemplate plainRestTemplate;
  private final RestTemplate authRestTemplate;
  private final Random random = new Random();
  private final OAuth2AuthorizedClientManager clientManager;

  public ExgenController(
                          @Qualifier("plainRestTemplate") RestTemplate plainRestTemplate,
                          @Qualifier("authRestTemplate") RestTemplate authRestTemplate,
                          OAuth2AuthorizedClientManager clientManager ){
    this.plainRestTemplate = plainRestTemplate;
    this.authRestTemplate = authRestTemplate;
    this.clientManager = clientManager;
  }

  public List<ExchangeRateDto> getRates() {

    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º ParameterizedTypeReference –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å List<>
      ResponseEntity<List<ExchangeRateDto>> response = plainRestTemplate.exchange(
//              "http://gateway/exchange/api/rates",
              "http://exchange:8080/api/rates",
              HttpMethod.GET,
              null,
              new ParameterizedTypeReference<List<ExchangeRateDto>>() {
              }
      );

      if (response.getStatusCode().is2xxSuccessful() && response.getBody() != null) {
        return response.getBody();
      } else {
        System.out.println("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã: " + response.getStatusCode());
        return new ArrayList<>();
      }
    } catch ( Exception e ) {
      System.out.println("–ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤: " + e );
    }
    return new ArrayList<>();
  }


  public List<ExchangeRateDto> modifyRates(List<ExchangeRateDto> originalRates) {
    List<ExchangeRateDto> modifiedRates = new ArrayList<>();

    for (ExchangeRateDto originalRate : originalRates) {
      ExchangeRateDto modifiedRate = new ExchangeRateDto();

      modifiedRate.setTitle(originalRate.getTitle());
      modifiedRate.setName(originalRate.getName());

      double changePercent = (random.nextDouble() * 0.02) - 0.01; // -0.01 –¥–æ +0.01
      double newValue = originalRate.getValue() * (1 + changePercent);
      // –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
      newValue = Math.round(newValue * 100.0) / 100.0;
      if( ! "RUB".equalsIgnoreCase(originalRate.getName()) ) {
        modifiedRate.setValue(newValue);
      }
      modifiedRates.add(modifiedRate);
    }

    return modifiedRates;
  }


  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã
  public void sendRates(List<ExchangeRateDto> rates) {

    // üîΩ 1. –ü–û–õ–£–ß–ê–ï–ú ACCESS TOKEN
    System.out.println( "–ø–æ–ª—É—á–∞–µ–º access token");
    OAuth2AuthorizeRequest request = OAuth2AuthorizeRequest.withClientRegistrationId("exgen")
            .principal("exgen")
            .build();
    OAuth2AuthorizedClient client = clientManager.authorize(request);
    String accessToken = client.getAccessToken().getTokenValue();
    System.out.println("üîê ExGen –ø–æ–ª—É—á–∏–ª —Ç–æ–∫–µ–Ω: " + accessToken.substring(0, 20) + "...");
    System.out.println("üîê –ü–æ–ª–Ω—ã–π —Ç–æ–∫–µ–Ω: " + accessToken);
    System.out.println("üìã Scope —Ç–æ–∫–µ–Ω–∞: " + client.getAccessToken().getScopes());
    System.out.println("‚è∞ Expires at: " + client.getAccessToken().getExpiresAt());

    HttpHeaders headers = new HttpHeaders();
    headers.setBearerAuth(accessToken);
    headers.setContentType(MediaType.APPLICATION_JSON);
    HttpEntity<List<ExchangeRateDto>> entity = new HttpEntity<>(rates, headers);

    try {
      ResponseEntity<Void> response = plainRestTemplate.exchange(
//              "http://gateway/exchange/api/bulk",
              "http://exchange:8080/api/bulk",
              HttpMethod.POST,
              entity,
              Void.class
      );
    } catch ( Exception e ) {
      System.out.println("‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: " + e.getMessage());
      e.printStackTrace();
    }

    //String url = "http://gateway/exchange/api/bulk";
    //restTemplate.postForObject(url, rates, Void.class);
  }


}
